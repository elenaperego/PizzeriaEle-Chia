Index: src/main/java/Classes/Order/Order.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Classes.Order;\n\nimport Classes.Pizza.Pizza;\n\nimport java.time.Clock;\nimport java.time.Duration;\nimport java.util.ArrayList;\n\npublic class Order {\n    private final long orderId;\n    private final long customerId;\n    private String orderStatus;\n    private final long codeId;\n    private double totalPrice;\n    private Date estimatedDeliveryTime;\n\n    private final String ordered_at;\n    private final String delivery_time;\n    private final Clock clockOrdered = Clock.systemUTC();\n    private final Clock clockDelivered = Clock.offset(clockOrdered, Duration.ofMinutes(20));\n\n    public Order(long orderId, long customerId, String status, long codeId, double price, Date time) {\n        this.orderId = orderId;\n        this.customerId = customerId;\n        this.codeId = codeId;\n        this.orderStatus = status;\n        this.totalPrice = price;\n        this.estimatedDeliveryTime = time;\n\n        this.ordered_at = clockOrdered.instant().toString();\n        this.delivery_time = clockDelivered.instant().toString();\n    }\n\n    public long getId() {\n        return this.orderId;\n    }\n\n    public long getCustomerId() {\n        return this.customerId;\n    }\n\n    public String getStatus() {\n        return this.orderStatus;\n    }\n\n    public void setStatus(String status){\n        this.orderStatus = status;\n    }\n\n    public long getCodeId() { return this.codeId; }\n\n    public double getTotalPrice() { return this.totalPrice; }\n\n    public void setTotalPrice(double price) { this.totalPrice = price; }\n\n    public Date getEstimatedDeliveryTime() { return this.estimatedDeliveryTime; }\n\n    public void setEstimatedDeliveryTime(Date time) { this.estimatedDeliveryTime = time; }\n\n    public String getOrdered_at() {\n        return ordered_at;\n    }\n\n    public String getDelivery_time() {\n        return delivery_time;\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Classes/Order/Order.java b/src/main/java/Classes/Order/Order.java
--- a/src/main/java/Classes/Order/Order.java	(revision 804de82f76b8834bcc5c0bbf89e03f04f3b34fc6)
+++ b/src/main/java/Classes/Order/Order.java	(date 1633165459051)
@@ -12,20 +12,20 @@
     private String orderStatus;
     private final long codeId;
     private double totalPrice;
-    private Date estimatedDeliveryTime;
+    //private Date estimatedDeliveryTime;
 
     private final String ordered_at;
     private final String delivery_time;
     private final Clock clockOrdered = Clock.systemUTC();
     private final Clock clockDelivered = Clock.offset(clockOrdered, Duration.ofMinutes(20));
 
-    public Order(long orderId, long customerId, String status, long codeId, double price, Date time) {
+    public Order(long orderId, long customerId, String status, long codeId, double price /*Date time*/) {
         this.orderId = orderId;
         this.customerId = customerId;
         this.codeId = codeId;
         this.orderStatus = status;
         this.totalPrice = price;
-        this.estimatedDeliveryTime = time;
+        //this.estimatedDeliveryTime = time;
 
         this.ordered_at = clockOrdered.instant().toString();
         this.delivery_time = clockDelivered.instant().toString();
@@ -53,9 +53,9 @@
 
     public void setTotalPrice(double price) { this.totalPrice = price; }
 
-    public Date getEstimatedDeliveryTime() { return this.estimatedDeliveryTime; }
+    //public Date getEstimatedDeliveryTime() { return this.estimatedDeliveryTime; }
 
-    public void setEstimatedDeliveryTime(Date time) { this.estimatedDeliveryTime = time; }
+    //public void setEstimatedDeliveryTime(Date time) { this.estimatedDeliveryTime = time; }
 
     public String getOrdered_at() {
         return ordered_at;
Index: src/main/java/Visualization/MenuPanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Visualization;\n\nimport javax.swing.*;\nimport java.awt.*;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\n\npublic class MenuPanel implements ActionListener {\n\n    JPanel menuPanel = new JPanel();\n    JScrollPane scrollPane = new JScrollPane(menuPanel);\n    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();\n\n    MenuPanel() {\n        menuPanel.setBackground(Color.LIGHT_GRAY);\n        menuPanel.setLayout(new BoxLayout(menuPanel, BoxLayout.Y_AXIS));\n        scrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);\n        addPanel(\"Margherita\", 5.50);\n        addPanel(\"Quattro Formaggi\", 10);\n        addPanel(\"San Daniele\", 7);\n        addPanel(\"Primavera\", 8.5);\n        addPanel(\"Boscaiola\", 10);\n        addPanel(\"Diavola\", 7);\n        addPanel(\"Quattro Stagioni\", 10);\n        addPanel(\"Bimbo\", 5);\n        addPanel(\"Elena\", 12);\n        addPanel(\"Chiara\", 12);\n        addPanel(\"Tiramisù\", 8);\n        addPanel(\"Cheesecake\", 9);\n        addPanel(\"Water\", 1.5);\n        addPanel(\"Wine\", 10);\n        addPanel(\"Beer\", 3);\n        addPanel(\"Coke\", 2);\n    }\n\n    public void addPanel(String text, double price) {\n        JPanel panel = new JPanel();\n        JCheckBox checkBox = new JCheckBox();\n        JButton nameLabel = new JButton(text);\n        JLabel priceLabel = new JLabel(\"\" + price + \" €\");\n\n        nameLabel.addActionListener(this);\n        nameLabel.setBackground(Color.LIGHT_GRAY);\n        priceLabel.setBackground(Color.LIGHT_GRAY);\n\n        panel.setBackground(Color.LIGHT_GRAY);\n        panel.setLayout(new BoxLayout(panel, BoxLayout.X_AXIS));\n        panel.setPreferredSize(new Dimension(screenSize.width, 300));\n        panel.add(checkBox);\n        panel.add(nameLabel);\n        panel.add(priceLabel);\n        menuPanel.add(panel);\n        menuPanel.add(Box.createRigidArea(new Dimension(screenSize.width, 30)));\n    }\n\n    @Override\n    public void actionPerformed(ActionEvent e) {\n        IngredientsFrame ingredients = new IngredientsFrame();\n        ingredients.setVisible(true);\n    }\n\n    public JScrollPane getMenuPanel() { return scrollPane; }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Visualization/MenuPanel.java b/src/main/java/Visualization/MenuPanel.java
--- a/src/main/java/Visualization/MenuPanel.java	(revision 804de82f76b8834bcc5c0bbf89e03f04f3b34fc6)
+++ b/src/main/java/Visualization/MenuPanel.java	(date 1633178025072)
@@ -1,20 +1,26 @@
 package Visualization;
 
+import Classes.Pizza.Pizza;
+import Classes.PizzaTopping.PizzaTopping;
+
 import javax.swing.*;
 import java.awt.*;
 import java.awt.event.ActionEvent;
 import java.awt.event.ActionListener;
+import java.util.ArrayList;
 
 public class MenuPanel implements ActionListener {
 
     JPanel menuPanel = new JPanel();
     JScrollPane scrollPane = new JScrollPane(menuPanel);
+    ArrayList<PizzaPanel> pizzas = new ArrayList();
     Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
 
     MenuPanel() {
         menuPanel.setBackground(Color.LIGHT_GRAY);
         menuPanel.setLayout(new BoxLayout(menuPanel, BoxLayout.Y_AXIS));
         scrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
+        /*
         addPanel("Margherita", 5.50);
         addPanel("Quattro Formaggi", 10);
         addPanel("San Daniele", 7);
@@ -31,33 +37,22 @@
         addPanel("Wine", 10);
         addPanel("Beer", 3);
         addPanel("Coke", 2);
+         */
     }
 
-    public void addPanel(String text, double price) {
-        JPanel panel = new JPanel();
-        JCheckBox checkBox = new JCheckBox();
-        JButton nameLabel = new JButton(text);
-        JLabel priceLabel = new JLabel("" + price + " €");
-
-        nameLabel.addActionListener(this);
-        nameLabel.setBackground(Color.LIGHT_GRAY);
-        priceLabel.setBackground(Color.LIGHT_GRAY);
-
-        panel.setBackground(Color.LIGHT_GRAY);
-        panel.setLayout(new BoxLayout(panel, BoxLayout.X_AXIS));
-        panel.setPreferredSize(new Dimension(screenSize.width, 300));
-        panel.add(checkBox);
-        panel.add(nameLabel);
-        panel.add(priceLabel);
-        menuPanel.add(panel);
+    public void addPanel(Pizza pizza, PizzaTopping toppings) {
+        PizzaPanel pizzaPanel = new PizzaPanel(pizza, toppings);
+        menuPanel.add(pizzaPanel.getPanel());
         menuPanel.add(Box.createRigidArea(new Dimension(screenSize.width, 30)));
     }
 
     @Override
     public void actionPerformed(ActionEvent e) {
-        IngredientsFrame ingredients = new IngredientsFrame();
+        ToppingsFrame ingredients = new ToppingsFrame();
         ingredients.setVisible(true);
     }
 
-    public JScrollPane getMenuPanel() { return scrollPane; }
+    public PizzaPanel getPizza(int i) { return this.pizzas.get(i); }
+
+    public JScrollPane getMenuPanel() { return this.scrollPane; }
 }
Index: src/main/java/Visualization/OrderFrame.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Visualization;\n\nimport javax.swing.*;\nimport java.awt.*;\n\npublic class OrderFrame extends JFrame {\n\n    JPanel orderPanel = new JPanel();\n\n    OrderFrame(){\n        this.setBackground(Color.GREEN);\n        this.setSize(500, 500);\n        this.setTitle(\"Order\");\n        this.setLocationRelativeTo(null);\n        this.setVisible(false);\n    }\n\n    public void addPanel() {\n\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Visualization/OrderFrame.java b/src/main/java/Visualization/OrderFrame.java
--- a/src/main/java/Visualization/OrderFrame.java	(revision 804de82f76b8834bcc5c0bbf89e03f04f3b34fc6)
+++ b/src/main/java/Visualization/OrderFrame.java	(date 1633174886213)
@@ -1,21 +1,66 @@
 package Visualization;
 
+import Classes.Pizza.Pizza;
+
 import javax.swing.*;
 import java.awt.*;
+import java.awt.event.ActionEvent;
+import java.awt.event.ActionListener;
 
-public class OrderFrame extends JFrame {
+public class OrderFrame implements ActionListener {
 
+    JFrame orderFrame = new JFrame();
     JPanel orderPanel = new JPanel();
+    JLabel orderLabel = new JLabel("ORDER NUMBER: 1234");
+    JLabel orderSummary = new JLabel("      ORDER SUMMARY");
+    JComboBox<Pizza> summary = new JComboBox<>();
+    JLabel codeLabel = new JLabel("     INSERT CODE HERE");
+    JTextField codeBox = new JTextField();
+    JButton confirmButton = new JButton("CONFIRM ORDER");
 
-    OrderFrame(){
-        this.setBackground(Color.GREEN);
-        this.setSize(500, 500);
-        this.setTitle("Order");
-        this.setLocationRelativeTo(null);
-        this.setVisible(false);
+    public OrderFrame(){
+        orderFrame.setBackground(Color.GREEN);
+        orderFrame.setSize(500, 500);
+        orderFrame.setTitle("Order");
+        orderFrame.setLocationRelativeTo(null);
+        addPanel();
+        orderFrame.setVisible(false);
     }
 
     public void addPanel() {
+        orderPanel.setSize(500, 500);
+        orderPanel.setLayout(new GridLayout(6, 1));
+
+        orderLabel.setFont(new Font("Serif", Font.BOLD, 17));
+        orderLabel.setHorizontalAlignment(SwingConstants.CENTER);
+        orderSummary.setFont(new Font("Serif", Font.BOLD, 17));
+        codeLabel.setFont(new Font("Serif", Font.BOLD, 17));
+        codeBox.setPreferredSize(new Dimension(200, 70));
+        confirmButton.setPreferredSize(new Dimension(100, 70));
 
+        orderPanel.add(orderLabel);
+        orderPanel.add(orderSummary);
+        orderPanel.add(summary);
+        orderPanel.add(codeLabel);
+        orderPanel.add(codeBox);
+        orderPanel.add(confirmButton);
+
+        this.orderFrame.add(orderPanel);
+    }
+
+    public JFrame getFrame() { return this.orderFrame; }
+
+    @Override
+    // Add pizzas to order summary if selected
+    public void actionPerformed(ActionEvent e) {
+        MenuPanel menu = new MenuPanel();
+
+        if (e.getSource() == summary) {
+            for (int i = 0; i < 10; i++) {
+                if (menu.getPizza(i).getCheckBox().isSelected()) {
+                    summary.addItem(menu.getPizza(i).getPizza());
+                }
+            }
+        }
     }
 }
Index: src/main/java/Classes/Order/OrderController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Classes.Order;\n\nimport java.util.ArrayList;\nimport java.util.concurrent.atomic.AtomicLong;\n\nimport Classes.Pizza.Pizza;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.*;\n\n@RestController\npublic class OrderController {\n    private final AtomicLong counter = new AtomicLong();\n    private final ArrayList<Order> orders = new ArrayList<>();\n\n    @GetMapping(\"/order/{customer_id}\")\n    public ArrayList<Order> getOrders(@RequestParam(value = \"customerID\", defaultValue = \"-1\") String id){\n        ArrayList<Order> ordersCustomer = new ArrayList<>();\n        boolean found = false;\n        for (int i = 0; i < orders.size(); i++) {\n            if (orders.get(i).getCustomer_id() == id) {\n                ordersCustomer.add(orders.get(i));\n                found = true;\n            }\n        }\n        return ordersCustomer;\n    }\n\n    @PostMapping(\"/order\")\n    public Order submitOrder(@RequestParam(value = \"pizzas\", defaultValue = \"-1\") ArrayList<Pizza> pizzas, @RequestParam(value = \"takeAway\", defaultValue = \"-1\") boolean takeaway, @RequestParam(value = \"paymentType\", defaultValue = \"-1\")String payment_type, @RequestParam(value = \"customerID\", defaultValue = \"-1\")String customer_id, @RequestParam(value = \"deliveryAddress\", defaultValue = \"-1\")ArrayList<String>delivery_address){\n        return new Order(counter.incrementAndGet(), customer_id, \"In Progress\", takeaway, payment_type, delivery_address, pizzas);\n    }\n\n    @PostMapping(\"/save\")\n    public ResponseEntity<Order> addEmployee(@RequestParam(value = \"pizzas\", defaultValue = \"-1\") ArrayList<Pizza> pizzas, @RequestParam(value = \"takeAway\", defaultValue = \"-1\") boolean takeaway, @RequestParam(value = \"paymentType\", defaultValue = \"-1\")String payment_type, @RequestParam(value = \"customerID\", defaultValue = \"-1\")String customer_id, @RequestParam(value = \"deliveryAddress\", defaultValue = \"-1\")ArrayList<String>delivery_address){\n        return new ResponseEntity<Order>(new Order(counter.incrementAndGet(), customer_id, \"In Progress\", takeaway, payment_type, delivery_address, pizzas), HttpStatus.CREATED);\n    }\n\n    @PutMapping(\"/order/cancel/{order_id}\")\n    public Order cancelOrder(@RequestParam(value = \"orderID\", defaultValue = \"-1\") long orderID){\n        Order order = null;\n        for (int i = 0; i < orders.size(); i++) {\n            if (orders.get(i).getId() == orderID) {\n                orders.get(i).setStatus(\"cancelled\");\n                order = orders.get(i);\n            }\n        }\n        return order;\n    }\n\n    @GetMapping(\"/order/deliverytime/{order_id}\")\n    public Order getDeliveryTime(@RequestParam(value = \"orderID\", defaultValue = \"-1\") long orderID){\n        Order order = null;\n        for (int i = 0; i < orders.size(); i++) {\n            if (orders.get(i).getId() == orderID) {\n                order = orders.get(i);\n            }\n        }\n        return order;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Classes/Order/OrderController.java b/src/main/java/Classes/Order/OrderController.java
--- a/src/main/java/Classes/Order/OrderController.java	(revision 804de82f76b8834bcc5c0bbf89e03f04f3b34fc6)
+++ b/src/main/java/Classes/Order/OrderController.java	(date 1633165481925)
@@ -7,7 +7,7 @@
 import org.springframework.http.HttpStatus;
 import org.springframework.http.ResponseEntity;
 import org.springframework.web.bind.annotation.*;
-
+/*
 @RestController
 public class OrderController {
     private final AtomicLong counter = new AtomicLong();
@@ -59,3 +59,4 @@
         return order;
     }
 }
+*/
Index: src/main/java/Mappers/OrderDataMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Mappers;\n\nimport Classes.Order.Order;\nimport Classes.Pizza.Pizza;\n\nimport java.sql.*;\nimport java.util.Optional;\n\npublic class OrderDataMapper implements DataMapper{\n\n    Connection conn;\n\n    public OrderDataMapper(Connection conn, boolean dropTable) {\n        this.conn = conn;\n        Statement stmt;\n        try{\n            stmt = conn.createStatement();\n\n            if(dropTable)\n                stmt.executeUpdate(\"DROP TABLE IF EXISTS orders\");\n\n            stmt.executeUpdate(\"CREATE TABLE orders (\"\n                    + \"orderStatus VARCHAR(64), \"\n                    + \"customerId TINYINT, \"\n                    + \"codeId INT, \"\n                    + \"estimatedDeliveryTime DATE, \"\n                    + \"totalPrice INT, \"\n                    + \"PRIMARY KEY (orderId))\");\n\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n    }\n\n    @Override\n    public Optional find(int id) {\n        Order o = null;\n        try{\n            PreparedStatement pstmt = conn.prepareStatement(\"SELECT orderStatus, customerId, codeId, estimatedDeliveryTime, totalPrice FROM order WHERE orderId = ?\");\n            pstmt.setInt(1, id);\n            ResultSet rs = pstmt.executeQuery();\n\n            if(rs.next()){\n                o = new Order((int) id, rs.getString(0), rs.getLong(1), rs.getLong(3), rs.getDate(4), rs.getDouble(5));\n            }\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n        return Optional.ofNullable(o);\n    }\n\n    @Override\n    public void insert(Object object) {\n        try{\n            Order orderToBeInserted = (Order) object;\n            PreparedStatement pstmt = conn.prepareStatement(\"INSERT INTO order (orderStatus, customerId, codeId, estimatedDeliveryTime, totalPrice) VALUES (?, ?, ?, ?, ?);\");\n            pstmt.setString(1, orderToBeInserted.getStatus());\n            pstmt.setLong(2, orderToBeInserted.getCustomerId());\n            pstmt.setLong(3, orderToBeInserted.getCodeId());\n            pstmt.setDate(4, orderToBeInserted.getEstimatedDeliveryTime());\n            pstmt.setDouble(5, orderToBeInserted.getTotalPrice());\n            pstmt.executeUpdate();\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n    }\n\n    @Override\n    public void update(Object object) {\n        try{\n            Order orderToBeUpdated = (Order) object;\n            PreparedStatement pstmt = conn.prepareStatement(\"UPDATE order SET orderStatus = ?, customerId = ?, codeId = ?, estimatedDeliveryTime = ?, totalPrice = ? WHERE orderId = ?;\");\n            pstmt.setString(1, orderToBeUpdated.getStatus());\n            pstmt.setLong(2, orderToBeUpdated.getCustomerId());\n            pstmt.setLong(3, orderToBeUpdated.getCodeId());\n            pstmt.setDate(4, orderToBeUpdated.getEstimatedDeliveryTime());\n            pstmt.setDouble(5, orderToBeUpdated.getTotalPrice());\n            pstmt.executeUpdate();\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n    }\n\n    @Override\n    public void delete(Object object) {\n        try{\n            Order orderToBeDeleted = (Order) object;\n            PreparedStatement pstmt = conn.prepareStatement(\"DELETE FROM order WHERE orderId = ?;\");\n            pstmt.setLong(1, orderToBeDeleted.getId());\n            pstmt.executeUpdate();\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Mappers/OrderDataMapper.java b/src/main/java/Mappers/OrderDataMapper.java
--- a/src/main/java/Mappers/OrderDataMapper.java	(revision 804de82f76b8834bcc5c0bbf89e03f04f3b34fc6)
+++ b/src/main/java/Mappers/OrderDataMapper.java	(date 1633165504507)
@@ -41,7 +41,7 @@
             ResultSet rs = pstmt.executeQuery();
 
             if(rs.next()){
-                o = new Order((int) id, rs.getString(0), rs.getLong(1), rs.getLong(3), rs.getDate(4), rs.getDouble(5));
+                //o = new Order((int) id, rs.getString(0), rs.getLong(1), rs.getLong(3), rs.getDate(4), rs.getDouble(5));
             }
         } catch (SQLException throwables) {
             throwables.printStackTrace();
@@ -57,7 +57,7 @@
             pstmt.setString(1, orderToBeInserted.getStatus());
             pstmt.setLong(2, orderToBeInserted.getCustomerId());
             pstmt.setLong(3, orderToBeInserted.getCodeId());
-            pstmt.setDate(4, orderToBeInserted.getEstimatedDeliveryTime());
+            //pstmt.setDate(4, orderToBeInserted.getEstimatedDeliveryTime());
             pstmt.setDouble(5, orderToBeInserted.getTotalPrice());
             pstmt.executeUpdate();
         } catch (SQLException throwables) {
@@ -73,7 +73,7 @@
             pstmt.setString(1, orderToBeUpdated.getStatus());
             pstmt.setLong(2, orderToBeUpdated.getCustomerId());
             pstmt.setLong(3, orderToBeUpdated.getCodeId());
-            pstmt.setDate(4, orderToBeUpdated.getEstimatedDeliveryTime());
+            //pstmt.setDate(4, orderToBeUpdated.getEstimatedDeliveryTime());
             pstmt.setDouble(5, orderToBeUpdated.getTotalPrice());
             pstmt.executeUpdate();
         } catch (SQLException throwables) {
Index: src/main/java/Visualization/LogoPanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Visualization;\n\nimport javax.swing.*;\nimport java.awt.*;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\n\npublic class LogoPanel extends JPanel implements ActionListener {\n\n    JLabel logo = new JLabel(\"            CHIA & ELE PIZZERIA\");\n    JButton pizzaLogo = new JButton();\n    JButton vespaLogo = new JButton();\n\n    ImageIcon pizzaIcon = new ImageIcon(ImageLoader.loadImage(\"src/main/java/Visualization/Resources/Pizza.png\"));\n    ImageIcon vespaIcon = new ImageIcon(ImageLoader.loadImage(\"src/main/java/Visualization/Resources/Vespa.png\"));\n    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();\n\n    LogoPanel() {\n        this.setBackground(Color.RED);\n        this.setPreferredSize(new Dimension(screenSize.width/2, screenSize.height/6));\n        this.setLayout(new BorderLayout());\n\n        logo.setFont(new Font(Font.SERIF, Font.BOLD, 50));\n\n        pizzaLogo.setIcon(pizzaIcon);\n        pizzaLogo.setPreferredSize(new Dimension(screenSize.width/5, screenSize.height/6));\n        pizzaLogo.setBackground(Color.RED);\n        pizzaLogo.setBorderPainted(false);\n        pizzaLogo.addActionListener(this);\n\n        vespaLogo.setIcon(vespaIcon);\n        vespaLogo.setPreferredSize(new Dimension(screenSize.width/5, screenSize.height/6));\n        vespaLogo.setBorderPainted(false);\n        vespaLogo.addActionListener(this);\n\n        this.add(vespaLogo, BorderLayout.EAST);\n        this.add(logo, BorderLayout.CENTER);\n        this.add(pizzaLogo, BorderLayout.WEST);\n    }\n\n    @Override\n    public void actionPerformed(ActionEvent e) {\n\n        if (e.getSource() == pizzaLogo) {\n            OrderFrame f = new OrderFrame();\n            f.setVisible(true);\n\n        } else if (e.getSource() == vespaLogo) {\n            StatusFrame f = new StatusFrame();\n            f.setVisible(true);\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Visualization/LogoPanel.java b/src/main/java/Visualization/LogoPanel.java
--- a/src/main/java/Visualization/LogoPanel.java	(revision 804de82f76b8834bcc5c0bbf89e03f04f3b34fc6)
+++ b/src/main/java/Visualization/LogoPanel.java	(date 1633165819340)
@@ -43,7 +43,7 @@
 
         if (e.getSource() == pizzaLogo) {
             OrderFrame f = new OrderFrame();
-            f.setVisible(true);
+            f.getFrame().setVisible(true);
 
         } else if (e.getSource() == vespaLogo) {
             StatusFrame f = new StatusFrame();
Index: src/main/java/Visualization/IngredientsFrame.java
===================================================================
diff --git a/src/main/java/Visualization/IngredientsFrame.java b/src/main/java/Visualization/IngredientsFrame.java
deleted file mode 100644
--- a/src/main/java/Visualization/IngredientsFrame.java	(revision 804de82f76b8834bcc5c0bbf89e03f04f3b34fc6)
+++ /dev/null	(revision 804de82f76b8834bcc5c0bbf89e03f04f3b34fc6)
@@ -1,15 +0,0 @@
-package Visualization;
-
-import javax.swing.*;
-import java.awt.*;
-
-public class IngredientsFrame extends JFrame {
-
-    IngredientsFrame() {
-        this.setBackground(Color.RED);
-        this.setSize(300, 200);
-        this.setTitle("Ingredients");
-        this.setLocationRelativeTo(null);
-        this.setVisible(false);
-    }
-}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"BranchesTreeState\">\n    <expand>\n      <path>\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n        <item name=\"LOCAL_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n      </path>\n      <path>\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n      </path>\n      <path>\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n        <item name=\"GROUP_NODE:origin\" type=\"e8cecc67:BranchNodeDescriptor\" />\n      </path>\n    </expand>\n    <select />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"de5680a0-8afb-4d08-b781-cf661715b336\" name=\"Default Changelist\" comment=\"STRA CAZZO COLLEGATO AL DATABASEEEE!!!\">\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/Classes/PizzaTopping/PizzaTopping.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/Mappers/DataMapper.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/Mappers/PizzaToppingDataMapper.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Mappers/PizzaDataMapper.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Mappers/PizzaDataMapper.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Mappers/PizzaDataMapperImpl.java\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/Mappers/TempMain.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Mappers/TempMain.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/PizzaAPI/PizzaAPI/Exceptions/Exception.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Classes/Exceptions/Exception.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/PizzaAPI/PizzaAPI/Exceptions/Exception200.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Classes/Exceptions/Exception200.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/PizzaAPI/PizzaAPI/Exceptions/Exception400.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Classes/Exceptions/Exception400.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/PizzaAPI/PizzaAPI/Exceptions/Exception404.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Classes/Exceptions/Exception404.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/PizzaAPI/PizzaAPI/Exceptions/Exception412.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Classes/Exceptions/Exception412.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/PizzaAPI/PizzaAPI/Exceptions/Exception422.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Classes/Exceptions/Exception422.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/PizzaAPI/PizzaAPI/Exceptions/ExceptionDetails.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Classes/Exceptions/ExceptionDetails.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/PizzaAPI/PizzaAPI/Exceptions/Handler.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Classes/Exceptions/Handler.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/PizzaAPI/PizzaAPI/Order/Order.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Classes/Order/Order.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/PizzaAPI/PizzaAPI/Order/OrderController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Classes/Order/OrderController.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/PizzaAPI/PizzaAPI/Pizza/Pizza.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Classes/Pizza/Pizza.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/PizzaAPI/PizzaAPI/Pizza/PizzaController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Classes/Pizza/PizzaController.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/PizzaAPI/PizzaAPI/PizzaApiApplication.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/Classes/PizzaApiApplication.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/com/PizzaAPI/PizzaAPI/PizzaApiApplicationTests.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/java/Classes/PizzaApiApplicationTests.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Interface\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"ProjectId\" id=\"1skLxCx4iXCLCrtWyzR0bYlCg2N\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"foldersAlwaysOnTop\" value=\"false\" />\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/../../../../../../../Program Files/Java/mysql-connector-java-8.0.26.jar\" />\n    <property name=\"project.structure.last.edited\" value=\"Libraries\" />\n    <property name=\"project.structure.proportion\" value=\"0.0\" />\n    <property name=\"project.structure.side.proportion\" value=\"0.0\" />\n    <property name=\"settings.editor.selected.configurable\" value=\"configurable.group.editor\" />\n  </component>\n  <component name=\"RecentsManager\">\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\n      <recent name=\"com.PizzaAPI.PizzaAPI\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/main/java/com/PizzaAPI/PizzaAPI\" />\n    </key>\n  </component>\n  <component name=\"RunManager\" selected=\"Application.TempMain\">\n    <configuration name=\"Launch\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"Visualization.Launch\" />\n      <module name=\"PizzaAPI\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"Visualization.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"PizzaApiApplication\" type=\"Application\" factoryName=\"Application\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.PizzaAPI.PizzaAPI.PizzaApiApplication\" />\n      <module name=\"PizzaAPI\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"com.PizzaAPI.PizzaAPI.Pizza.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"TempMain\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"Mappers.TempMain\" />\n      <module name=\"PizzaAPI\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"Mappers.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Application.TempMain\" />\n        <item itemvalue=\"Application.Launch\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"de5680a0-8afb-4d08-b781-cf661715b336\" name=\"Default Changelist\" comment=\"\" />\n      <created>1621411887172</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1621411887172</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Exception implemented in the code\">\n      <created>1621703162491</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1621703162492</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"mapper\">\n      <created>1632231612551</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1632231612551</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"mapper and connection finished\">\n      <created>1632465470924</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1632465470924</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"mapper and connection finished\">\n      <created>1632485784060</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1632485784060</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"STRA CAZZO COLLEGATO AL DATABASEEEE!!!\">\n      <created>1632499810258</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1632499810258</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"6\" />\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Exception implemented in the code\" />\n    <MESSAGE value=\"mapper\" />\n    <MESSAGE value=\"mapper and connection finished\" />\n    <MESSAGE value=\"STRA CAZZO COLLEGATO AL DATABASEEEE!!!\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"STRA CAZZO COLLEGATO AL DATABASEEEE!!!\" />\n  </component>\n  <component name=\"WindowStateProjectService\">\n    <state x=\"446\" y=\"47\" key=\"#com.intellij.ide.util.MemberChooser\" timestamp=\"1632826911088\">\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\n    </state>\n    <state x=\"446\" y=\"47\" key=\"#com.intellij.ide.util.MemberChooser/0.0.1280.680@0.0.1280.680\" timestamp=\"1632826911088\" />\n    <state x=\"424\" y=\"209\" width=\"432\" height=\"268\" key=\"#com.intellij.refactoring.move.moveClassesOrPackages.MoveClassesOrPackagesDialog.classes\" timestamp=\"1632486222096\">\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\n    </state>\n    <state x=\"424\" y=\"209\" width=\"432\" height=\"268\" key=\"#com.intellij.refactoring.move.moveClassesOrPackages.MoveClassesOrPackagesDialog.classes/0.0.1280.680@0.0.1280.680\" timestamp=\"1632486222096\" />\n    <state x=\"371\" y=\"87\" key=\"#com.intellij.refactoring.safeDelete.UnsafeUsagesDialog\" timestamp=\"1632826832225\">\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\n    </state>\n    <state x=\"371\" y=\"87\" key=\"#com.intellij.refactoring.safeDelete.UnsafeUsagesDialog/0.0.1280.680@0.0.1280.680\" timestamp=\"1632826832225\" />\n    <state x=\"369\" y=\"81\" key=\"FileChooserDialogImpl\" timestamp=\"1632497089360\">\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\n    </state>\n    <state x=\"369\" y=\"81\" key=\"FileChooserDialogImpl/0.0.1280.680@0.0.1280.680\" timestamp=\"1632497089360\" />\n    <state width=\"1237\" height=\"163\" key=\"GridCell.Tab.0.bottom\" timestamp=\"1632669380315\">\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\n    </state>\n    <state width=\"1237\" height=\"163\" key=\"GridCell.Tab.0.bottom/0.0.1280.680@0.0.1280.680\" timestamp=\"1632669380315\" />\n    <state width=\"1237\" height=\"163\" key=\"GridCell.Tab.0.center\" timestamp=\"1632669380315\">\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\n    </state>\n    <state width=\"1237\" height=\"163\" key=\"GridCell.Tab.0.center/0.0.1280.680@0.0.1280.680\" timestamp=\"1632669380315\" />\n    <state width=\"1237\" height=\"163\" key=\"GridCell.Tab.0.left\" timestamp=\"1632669380315\">\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\n    </state>\n    <state width=\"1237\" height=\"163\" key=\"GridCell.Tab.0.left/0.0.1280.680@0.0.1280.680\" timestamp=\"1632669380315\" />\n    <state width=\"1237\" height=\"163\" key=\"GridCell.Tab.0.right\" timestamp=\"1632669380315\">\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\n    </state>\n    <state width=\"1237\" height=\"163\" key=\"GridCell.Tab.0.right/0.0.1280.680@0.0.1280.680\" timestamp=\"1632669380315\" />\n    <state x=\"171\" y=\"0\" key=\"Maven.ArtifactSearchDialog\" timestamp=\"1632827802393\">\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\n    </state>\n    <state x=\"171\" y=\"0\" key=\"Maven.ArtifactSearchDialog/0.0.1280.680@0.0.1280.680\" timestamp=\"1632827802393\" />\n    <state x=\"142\" y=\"0\" key=\"SettingsEditor\" timestamp=\"1632497097407\">\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\n    </state>\n    <state x=\"142\" y=\"0\" key=\"SettingsEditor/0.0.1280.680@0.0.1280.680\" timestamp=\"1632497097407\" />\n    <state x=\"233\" y=\"73\" key=\"Vcs.Push.Dialog.v2\" timestamp=\"1632499815706\">\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\n    </state>\n    <state x=\"233\" y=\"73\" key=\"Vcs.Push.Dialog.v2/0.0.1280.680@0.0.1280.680\" timestamp=\"1632499815706\" />\n    <state x=\"458\" y=\"254\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2\" timestamp=\"1632499776777\">\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\n    </state>\n    <state x=\"458\" y=\"254\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.1280.680@0.0.1280.680\" timestamp=\"1632499776777\" />\n    <state x=\"181\" y=\"51\" width=\"918\" height=\"629\" key=\"com.intellij.xdebugger.impl.breakpoints.ui.BreakpointsDialogFactory$2\" timestamp=\"1632497162518\">\n      <screen x=\"0\" y=\"0\" width=\"1280\" height=\"680\" />\n    </state>\n    <state x=\"181\" y=\"51\" width=\"918\" height=\"629\" key=\"com.intellij.xdebugger.impl.breakpoints.ui.BreakpointsDialogFactory$2/0.0.1280.680@0.0.1280.680\" timestamp=\"1632497162518\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <breakpoint enabled=\"true\" type=\"java-exception\">\n          <properties class=\"java.sql.SQLSyntaxErrorException\" package=\"java.sql\" />\n          <option name=\"timeStamp\" value=\"1\" />\n        </breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\n    <SUITE FILE_PATH=\"coverage/PizzaAPI__Ele_$PizzaApiApplication.ic\" NAME=\"PizzaApiApplication Coverage Results\" MODIFIED=\"1621702250345\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\n      <FILTER>com.PizzaAPI.PizzaAPI.Pizza.*</FILTER>\n    </SUITE>\n    <SUITE FILE_PATH=\"coverage/PizzaAPI__Latest_$PizzaApiApplication.ic\" NAME=\"PizzaApiApplication Coverage Results\" MODIFIED=\"1631546958602\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\n      <FILTER>com.PizzaAPI.PizzaAPI.Pizza.*</FILTER>\n    </SUITE>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 804de82f76b8834bcc5c0bbf89e03f04f3b34fc6)
+++ b/.idea/workspace.xml	(date 1633177645545)
@@ -22,28 +22,16 @@
     <select />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="de5680a0-8afb-4d08-b781-cf661715b336" name="Default Changelist" comment="STRA CAZZO COLLEGATO AL DATABASEEEE!!!">
-      <change afterPath="$PROJECT_DIR$/src/main/java/Classes/PizzaTopping/PizzaTopping.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/Mappers/DataMapper.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/Mappers/PizzaToppingDataMapper.java" afterDir="false" />
+    <list default="true" id="de5680a0-8afb-4d08-b781-cf661715b336" name="Default Changelist" comment="">
+      <change afterPath="$PROJECT_DIR$/src/main/java/Visualization/ToppingsFrame.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/Mappers/PizzaDataMapper.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Mappers/PizzaDataMapper.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/Mappers/PizzaDataMapperImpl.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/Mappers/TempMain.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Mappers/TempMain.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/PizzaAPI/PizzaAPI/Exceptions/Exception.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Classes/Exceptions/Exception.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/PizzaAPI/PizzaAPI/Exceptions/Exception200.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Classes/Exceptions/Exception200.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/PizzaAPI/PizzaAPI/Exceptions/Exception400.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Classes/Exceptions/Exception400.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/PizzaAPI/PizzaAPI/Exceptions/Exception404.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Classes/Exceptions/Exception404.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/PizzaAPI/PizzaAPI/Exceptions/Exception412.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Classes/Exceptions/Exception412.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/PizzaAPI/PizzaAPI/Exceptions/Exception422.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Classes/Exceptions/Exception422.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/PizzaAPI/PizzaAPI/Exceptions/ExceptionDetails.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Classes/Exceptions/ExceptionDetails.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/PizzaAPI/PizzaAPI/Exceptions/Handler.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Classes/Exceptions/Handler.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/PizzaAPI/PizzaAPI/Order/Order.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Classes/Order/Order.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/PizzaAPI/PizzaAPI/Order/OrderController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Classes/Order/OrderController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/PizzaAPI/PizzaAPI/Pizza/Pizza.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Classes/Pizza/Pizza.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/PizzaAPI/PizzaAPI/Pizza/PizzaController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Classes/Pizza/PizzaController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/PizzaAPI/PizzaAPI/PizzaApiApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Classes/PizzaApiApplication.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/test/java/com/PizzaAPI/PizzaAPI/PizzaApiApplicationTests.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/Classes/PizzaApiApplicationTests.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/Classes/Order/Order.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Classes/Order/Order.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/Classes/Order/OrderController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Classes/Order/OrderController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/Mappers/OrderDataMapper.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Mappers/OrderDataMapper.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/Visualization/IngredientsFrame.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/Visualization/LogoPanel.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Visualization/LogoPanel.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/Visualization/MenuPanel.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Visualization/MenuPanel.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/Visualization/OrderFrame.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Visualization/OrderFrame.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -86,7 +74,7 @@
       <recent name="$PROJECT_DIR$/src/main/java/com/PizzaAPI/PizzaAPI" />
     </key>
   </component>
-  <component name="RunManager" selected="Application.TempMain">
+  <component name="RunManager" selected="Application.Launch">
     <configuration name="Launch" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="Visualization.Launch" />
       <module name="PizzaAPI" />
@@ -128,8 +116,8 @@
     </configuration>
     <recent_temporary>
       <list>
-        <item itemvalue="Application.TempMain" />
         <item itemvalue="Application.Launch" />
+        <item itemvalue="Application.TempMain" />
       </list>
     </recent_temporary>
   </component>
@@ -177,7 +165,21 @@
       <option name="project" value="LOCAL" />
       <updated>1632499810258</updated>
     </task>
-    <option name="localTasksCounter" value="6" />
+    <task id="LOCAL-00006" summary="Mappers added">
+      <created>1633163354728</created>
+      <option name="number" value="00006" />
+      <option name="presentableId" value="LOCAL-00006" />
+      <option name="project" value="LOCAL" />
+      <updated>1633163354728</updated>
+    </task>
+    <task id="LOCAL-00007" summary="Mappers and classes added">
+      <created>1633163549773</created>
+      <option name="number" value="00007" />
+      <option name="presentableId" value="LOCAL-00007" />
+      <option name="project" value="LOCAL" />
+      <updated>1633163549773</updated>
+    </task>
+    <option name="localTasksCounter" value="8" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -197,61 +199,9 @@
     <MESSAGE value="mapper" />
     <MESSAGE value="mapper and connection finished" />
     <MESSAGE value="STRA CAZZO COLLEGATO AL DATABASEEEE!!!" />
-    <option name="LAST_COMMIT_MESSAGE" value="STRA CAZZO COLLEGATO AL DATABASEEEE!!!" />
-  </component>
-  <component name="WindowStateProjectService">
-    <state x="446" y="47" key="#com.intellij.ide.util.MemberChooser" timestamp="1632826911088">
-      <screen x="0" y="0" width="1280" height="680" />
-    </state>
-    <state x="446" y="47" key="#com.intellij.ide.util.MemberChooser/0.0.1280.680@0.0.1280.680" timestamp="1632826911088" />
-    <state x="424" y="209" width="432" height="268" key="#com.intellij.refactoring.move.moveClassesOrPackages.MoveClassesOrPackagesDialog.classes" timestamp="1632486222096">
-      <screen x="0" y="0" width="1280" height="680" />
-    </state>
-    <state x="424" y="209" width="432" height="268" key="#com.intellij.refactoring.move.moveClassesOrPackages.MoveClassesOrPackagesDialog.classes/0.0.1280.680@0.0.1280.680" timestamp="1632486222096" />
-    <state x="371" y="87" key="#com.intellij.refactoring.safeDelete.UnsafeUsagesDialog" timestamp="1632826832225">
-      <screen x="0" y="0" width="1280" height="680" />
-    </state>
-    <state x="371" y="87" key="#com.intellij.refactoring.safeDelete.UnsafeUsagesDialog/0.0.1280.680@0.0.1280.680" timestamp="1632826832225" />
-    <state x="369" y="81" key="FileChooserDialogImpl" timestamp="1632497089360">
-      <screen x="0" y="0" width="1280" height="680" />
-    </state>
-    <state x="369" y="81" key="FileChooserDialogImpl/0.0.1280.680@0.0.1280.680" timestamp="1632497089360" />
-    <state width="1237" height="163" key="GridCell.Tab.0.bottom" timestamp="1632669380315">
-      <screen x="0" y="0" width="1280" height="680" />
-    </state>
-    <state width="1237" height="163" key="GridCell.Tab.0.bottom/0.0.1280.680@0.0.1280.680" timestamp="1632669380315" />
-    <state width="1237" height="163" key="GridCell.Tab.0.center" timestamp="1632669380315">
-      <screen x="0" y="0" width="1280" height="680" />
-    </state>
-    <state width="1237" height="163" key="GridCell.Tab.0.center/0.0.1280.680@0.0.1280.680" timestamp="1632669380315" />
-    <state width="1237" height="163" key="GridCell.Tab.0.left" timestamp="1632669380315">
-      <screen x="0" y="0" width="1280" height="680" />
-    </state>
-    <state width="1237" height="163" key="GridCell.Tab.0.left/0.0.1280.680@0.0.1280.680" timestamp="1632669380315" />
-    <state width="1237" height="163" key="GridCell.Tab.0.right" timestamp="1632669380315">
-      <screen x="0" y="0" width="1280" height="680" />
-    </state>
-    <state width="1237" height="163" key="GridCell.Tab.0.right/0.0.1280.680@0.0.1280.680" timestamp="1632669380315" />
-    <state x="171" y="0" key="Maven.ArtifactSearchDialog" timestamp="1632827802393">
-      <screen x="0" y="0" width="1280" height="680" />
-    </state>
-    <state x="171" y="0" key="Maven.ArtifactSearchDialog/0.0.1280.680@0.0.1280.680" timestamp="1632827802393" />
-    <state x="142" y="0" key="SettingsEditor" timestamp="1632497097407">
-      <screen x="0" y="0" width="1280" height="680" />
-    </state>
-    <state x="142" y="0" key="SettingsEditor/0.0.1280.680@0.0.1280.680" timestamp="1632497097407" />
-    <state x="233" y="73" key="Vcs.Push.Dialog.v2" timestamp="1632499815706">
-      <screen x="0" y="0" width="1280" height="680" />
-    </state>
-    <state x="233" y="73" key="Vcs.Push.Dialog.v2/0.0.1280.680@0.0.1280.680" timestamp="1632499815706" />
-    <state x="458" y="254" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2" timestamp="1632499776777">
-      <screen x="0" y="0" width="1280" height="680" />
-    </state>
-    <state x="458" y="254" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.1280.680@0.0.1280.680" timestamp="1632499776777" />
-    <state x="181" y="51" width="918" height="629" key="com.intellij.xdebugger.impl.breakpoints.ui.BreakpointsDialogFactory$2" timestamp="1632497162518">
-      <screen x="0" y="0" width="1280" height="680" />
-    </state>
-    <state x="181" y="51" width="918" height="629" key="com.intellij.xdebugger.impl.breakpoints.ui.BreakpointsDialogFactory$2/0.0.1280.680@0.0.1280.680" timestamp="1632497162518" />
+    <MESSAGE value="Mappers added" />
+    <MESSAGE value="Mappers and classes added" />
+    <option name="LAST_COMMIT_MESSAGE" value="Mappers and classes added" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
@@ -264,10 +214,19 @@
     </breakpoint-manager>
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
+    <SUITE FILE_PATH="coverage/PizzeriaEle_Chia$Launch.ic" NAME="Launch Coverage Results" MODIFIED="1633167803874" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
+      <FILTER>Visualization.*</FILTER>
+    </SUITE>
     <SUITE FILE_PATH="coverage/PizzaAPI__Ele_$PizzaApiApplication.ic" NAME="PizzaApiApplication Coverage Results" MODIFIED="1621702250345" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
       <FILTER>com.PizzaAPI.PizzaAPI.Pizza.*</FILTER>
     </SUITE>
     <SUITE FILE_PATH="coverage/PizzaAPI__Latest_$PizzaApiApplication.ic" NAME="PizzaApiApplication Coverage Results" MODIFIED="1631546958602" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
+      <FILTER>com.PizzaAPI.PizzaAPI.Pizza.*</FILTER>
+    </SUITE>
+    <SUITE FILE_PATH="coverage/PizzeriaEle_Chia$TempMain.ic" NAME="TempMain Coverage Results" MODIFIED="1633091251286" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
+      <FILTER>Mappers.*</FILTER>
+    </SUITE>
+    <SUITE FILE_PATH="coverage/PizzeriaEle_Chia$PizzaApiApplication.ic" NAME="PizzaApiApplication Coverage Results" MODIFIED="1632490991463" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
       <FILTER>com.PizzaAPI.PizzaAPI.Pizza.*</FILTER>
     </SUITE>
   </component>
Index: src/main/java/Visualization/ToppingsFrame.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Visualization/ToppingsFrame.java b/src/main/java/Visualization/ToppingsFrame.java
new file mode 100644
--- /dev/null	(date 1633178031643)
+++ b/src/main/java/Visualization/ToppingsFrame.java	(date 1633178031643)
@@ -0,0 +1,21 @@
+package Visualization;
+
+import Classes.PizzaTopping.PizzaTopping;
+
+import javax.swing.*;
+import java.awt.*;
+
+public class ToppingsFrame extends JFrame {
+
+    JFrame toppingsFrame = new JFrame();
+
+    ToppingsFrame() {
+        toppingsFrame.setBackground(Color.RED);
+        toppingsFrame.setSize(300, 200);
+        toppingsFrame.setTitle("Ingredients");
+        toppingsFrame.setLocationRelativeTo(null);
+        toppingsFrame.setVisible(false);
+    }
+
+    public JFrame getFrame() { return this.toppingsFrame; }
+}
